Metadata-Version: 2.1
Name: cbuff
Version: 1.0.1
Summary: A command buffer for terminals.
Home-page: https://github.com/RaghavGohil/cbuff
Author: RaghavGohil
Author-email: raghavgohil2004@gmail.com
License: MIT LICENSE
Description: ![cbuff](https://github.com/RaghavGohil/cbuff/assets/71706645/4343a690-f4b4-402a-a83f-5849803cb642)
        
        ![version](https://img.shields.io/badge/version-1.0.1-blue)
        ![python](https://img.shields.io/badge/lang-python3-green)
        
        # cbuff - Command Buffer
        
        ```cbuff``` (short for Command Buffer) is a versatile command-line tool that empowers users to efficiently store, manage, and execute frequently used commands and workflows. With its user-friendly interface, cbuff simplifies command-line tasks, improves productivity, and reduces the risk of errors.
        
        - cbuff can store long paths, commands, also multiple commands which can run sequentially.
        
        - cbuff can take parameters so you don't have to write a big command again.
        
        - It is preferred to use an alias for cbuff. Something like 'cb'. Currently you have to define it manually.
        
        ## Key Features
        
        - **Simplicity and Convenience**: `cbuff` offers a straightforward and convenient way to manage and execute command-line operations, reducing the need to remember complex commands.
        
        - **Productivity Boost**: By streamlining repetitive tasks and simplifying command execution, `cbuff` can enhance productivity in various workflows.
        
        - **Customization**: Users can create aliases for their most-used commands, tailoring `cbuff` to their specific needs and workflows.
        
        - **Multicommand system**: Users can create aliases which can store multiple commands which execute sequentially.
        
        - **Cross-Platform Compatibility**: `cbuff` is designed to work on multiple platforms, ensuring consistency in command execution across different environments.
        
        - **Documentation and Collaboration**: `cbuff` can be used to store and share common commands and snippets, promoting consistency in command usage, especially in collaborative environments.
        
        - **Open Source Community**: If `cbuff` is open-source and actively maintained, it may attract contributions from the open-source community, leading to feature enhancements and issue resolution.
        
        ## Installation
        
        Use ```pip install cbuff``` to install cbuffer.
        
        ## Usage
        
        How to use cbuff:
            
            This program will help users to create a cmd prompt command dictionary.
            
            The default storage dir is downloads.
            The users will be able to:
            - push one command                                          -> cbuff push | p <command> <alias>
            - push multiple commands                                    -> cbuff push | p "<command1>&&<command2>" <alias>
            - push a path when alias is prefixed by @ (open terminal)   -> cbuff push | p <path> @<alias>
            - view the commands with their unique alias key             -> cbuff view | v
            - run pushed commands with that alias key                   -> cbuff <alias>
            - pass params when you run alias (command must contain {})  -> cbuff <alias> <param1> <param2> ...
            - remove the pushed commands with the key                   -> cbuff remove | r <alias>
            - open the buffer in notepad/vim for quick edit             -> cbuff open | o
            - reset the system                                          -> cbuff reset | re
            - get help for cbuff                                        -> cbuff help | h
        
            * You can provide an alias for cbuff altogether. Instead of typing cbuff you can define something like 'cb' in your terminal.
            * You can use "" while making an alias for storing commands having spaces.
            * You can execute cbuff commands inside cbuff.
            * You can combine cbuff commands like cbuff p "cbuff reset&&cbuff open" quick-edit
              and run it like : cbuff quick-edit or cb quick-edit if defined as stated earlier.
        
        ## License
        
        `cbuff` uses the MIT License. For more details, look for the license file.
        
        ## Contributing
        
        Contributions to `cbuff` are welcome! If you'd like to contribute or report issues, please visit the [cbuff GitHub repository](https://github.com/RaghavGohil/cbuff).
        
Keywords: command buffer terminal storage windows linux macos
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft
Requires-Python: >=3.0
Description-Content-Type: text/markdown
